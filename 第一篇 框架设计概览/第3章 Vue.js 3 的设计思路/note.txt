1.声明式地描述 UI
两种方式：使用模板、使用 JavaScript 对象（虚拟 DOM）。使用 JavaScript 对象描述 UI 更加灵活。
在 Vue.js 组件中手写的渲染函数就是使用虚拟 DOM 来描述 UI 的。
组件的渲染函数：一个组件要渲染的内容是通过渲染函数来描述的，Vue.js 会根据组件的 render 函数的返回值拿到虚拟 DOM ，然后就可以把组件的内容渲染出来了。

2.渲染器 (3.2-renderer.html)
渲染器的作用就是把虚拟 DOM 渲染为真实 DOM 

3.组件的本质 (3.3-componentRenderer.html)
组件就是一组 DOM 元素的封装，这组 DOM 元素就是组件要渲染的内容。组件的返回值也是虚拟 DOM，它代表组件要渲染的内容。

4.模板的工作原理
编译器：将模板内容编译为渲染函数并添加到<script>标签块的组件对象上。
无论是使用模板还是直接手写渲染函数，对于一个组件来说，它要渲染的内容最终都是通过渲染函数产生的，然后渲染器再把渲染函数返回的虚拟 DOM 渲染为真实 DOM。

5.模块交流
编译器和渲染器之间是存在信息交流的，而它们之间交流的媒介就是虚拟 DOM 对象。